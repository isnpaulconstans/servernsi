# nsi server configuration

# top-level http config for websocket headers
# If Upgrade is defined, Connection = upgrade
# If Upgrade is empty, Connection = close
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}


server {

	root /var/www/Projet_ISN/public;

	# Add index.php to the list if you are using PHP
	index index.php;

	server_name paulconstans.ddns.info;

	location / {
		try_files $uri $uri/ /index.php?$args;
		# pass PHP scripts to FastCGI server
		#
		location ~ \.php$ {
			include snippets/fastcgi-php.conf;
			#
			# With php-fpm (or other unix sockets):
			fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			include /etc/nginx/fastcgi_params;
		}

	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	location ~ /\.ht {
		deny all;
	}
	
	rewrite ^/gitea$ /gitea/ permanent;

	location /gitea/ {
		proxy_pass http://gitea/;
		proxy_set_header Host $host;
		proxy_buffering off;
	}

	rewrite ^/jupyter$ /jupyter/ permanent;
	location /jupyter/ {
                proxy_pass https://127.0.0.1:8888;

                proxy_redirect   off;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # websocket headers
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;

	}


	rewrite ^/jirafeau$ /jirafeau/ permanent;

	location /jirafeau/ {
		alias /var/www/Jirafeau/;
		index index.php;
		try_files $uri $uri/ /index.php?$args;

		location ~ \.php$ {
			fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
			fastcgi_index index.php;
			fastcgi_param SCRIPT_FILENAME $request_filename;
			include /etc/nginx/fastcgi_params;
		}
	}

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/paulconstans.ddns.info/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/paulconstans.ddns.info/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = paulconstans.ddns.info) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 default_server;
	listen [::]:80 default_server;

	server_name paulconstans.ddns.info;
    return 404; # managed by Certbot
}
